{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["styles","app","height","backgroundColor","flexDirection","header","display","alignItems","justifyContent","color","count","zIndex","video","canvas","top","App","canvasElement","useRef","videoElement","videoConstraints","width","useState","curlCount","setCurlCount","squatCount","setSquatCount","isCurling","left","right","isSquatting","currentPhase","setCurrentPhase","squatTimer","setSquatTimer","curlTimer","setCurlTimer","clearTimers","clearTimeout","onResults","results","canvasCtx","current","getContext","save","clearRect","drawImage","image","drawConnectors","poseLandmarks","POSE_CONNECTIONS","lineWidth","drawLandmarks","radius","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","angleLeft","calculateAngle","angleRight","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","angleLeftKnee","angleRightKnee","restore","a","b","c","aToB","Math","sqrt","pow","x","y","bToC","aToC","acos","PI","useEffect","pose","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","navigator","mediaDevices","getUserMedia","then","stream","srcObject","onloadedmetadata","Camera","onFrame","send","start","catch","err","console","error","close","timer","setTimeout","style","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0876a268.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Camera } from \"@mediapipe/camera_utils\";\nimport { Pose, POSE_CONNECTIONS } from \"@mediapipe/pose\";\nimport \"@mediapipe/drawing_utils/drawing_utils\";\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils\";\n\nconst styles = {\n  app: {\n    height: \"100vh\",\n    backgroundColor: \"#282c34\",\n    flexDirection: \"column\",\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"white\",\n  },\n  count: {\n    zIndex: 10,\n    color: '#61dafb'\n  },\n  video: {\n    display: \"none\",\n  },\n  canvas: {\n    top: \"80%\",\n  }\n};\n\n\nfunction App() {\n  const canvasElement = useRef(null);\n  const videoElement = useRef(null);\n  const videoConstraints = {\n    width: 640,\n    height: 360,\n  };\n  const [curlCount, setCurlCount] = useState(0);\n  const [squatCount, setSquatCount] = useState(0);\n  const isCurling = useRef({left: false, right: false});\n  const isSquatting = useRef(false);\n  const [currentPhase, setCurrentPhase] = useState(null);\n  const [squatTimer, setSquatTimer] = useState(null);\n  const [curlTimer, setCurlTimer] = useState(null);\n  \n  // 1. Add a new function to clear the timers\n  function clearTimers() {\n    clearTimeout(squatTimer);\n    clearTimeout(curlTimer);\n    setSquatTimer(null);\n    setCurlTimer(null);\n  }\n  \n  // 初めての useEffect フック\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n      },\n    });\n\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: true,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    pose.onResults(onResults);\n\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({ video: videoConstraints })\n        .then((stream) => {\n          videoElement.current.srcObject = stream;\n          videoElement.current.onloadedmetadata = () => {\n            const camera = new Camera(videoElement.current, {\n              onFrame: async () => {\n                await pose.send({ image: videoElement.current });\n              },\n              width: videoConstraints.width,\n              height: videoConstraints.height,\n            });\n            camera.start();\n          };\n        })\n        .catch((err) => {\n          console.error(\"Failed to get user media\", err);\n        });\n    }\n\n    // Cleanup function\n    return () => {\n      pose.close();\n    };\n  }, []);\n\n// 2番目の新しい useEffect フック\nuseEffect(() => {\n  if (!currentPhase) {\n    setSquatCount(0);\n    setCurlCount(0);\n    isCurling.current = { left: false, right: false };\n    isSquatting.current = false;\n  }\n  if (currentPhase === 'squat') {\n    if (!squatTimer) {\n      const timer = setTimeout(() => {\n        setCurrentPhase('curl');\n        clearTimers();\n      }, 5000);\n      setSquatTimer(timer);\n    }\n  }\n  if (currentPhase === 'curl') {\n    if (!curlTimer) {\n      const timer = setTimeout(() => {\n        setCurrentPhase('squat');\n        clearTimers();\n      }, 5000);\n      setCurlTimer(timer);\n    }\n  }\n}, [currentPhase, squatTimer, curlTimer]);\n\n\n  function onResults(results) {\n    const canvasCtx = canvasElement.current.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(\n      0,\n      0,\n      canvasElement.current.width,\n      canvasElement.current.height\n    );\n    canvasCtx.drawImage(\n      results.image,\n      0,\n      0,\n      canvasElement.current.width,\n      canvasElement.current.height\n    );\n    drawConnectors(\n      canvasCtx,\n      results.poseLandmarks,\n      POSE_CONNECTIONS,\n      { color: \"#F5E07E\", lineWidth: 2 }\n    );\n    drawLandmarks(\n      canvasCtx,\n      results.poseLandmarks,\n      { color: \"#223BE9\", lineWidth: 1, radius: 2 }\n    );\n\n    if (results.poseLandmarks) {\n      const leftShoulder = results.poseLandmarks[11]; \n      const rightShoulder = results.poseLandmarks[12];\n      const leftElbow = results.poseLandmarks[13];\n      const rightElbow = results.poseLandmarks[14];\n      const leftWrist = results.poseLandmarks[15];\n      const rightWrist = results.poseLandmarks[16];\n\n      const angleLeft = calculateAngle(leftShoulder, leftElbow, leftWrist);\n      const angleRight = calculateAngle(rightShoulder, rightElbow, rightWrist);\n\n      if (angleLeft > 160) {\n        isCurling.current.left = \"down\";\n      }\n      if (angleLeft < 30 && isCurling.current.left === 'down') {\n        isCurling.current.left = \"up\";\n      }\n    \n      if (angleRight > 160) {\n        isCurling.current.right = \"down\";\n      }\n      if (angleRight < 30 && isCurling.current.right === 'down') {\n        isCurling.current.right = \"up\";\n      }\n\n      if (isCurling.current.left === \"up\" && isCurling.current.right === \"up\") {\n        setCurlCount((count) => count + 1);\n        setCurrentPhase('curl'); \n        isCurling.current.left = false;\n        isCurling.current.right = false;\n      }\n\n      const leftHip = results.poseLandmarks[23];\n      const rightHip = results.poseLandmarks[24];\n      const leftKnee = results.poseLandmarks[25];\n      const rightKnee = results.poseLandmarks[26];\n      const leftAnkle = results.poseLandmarks[27];\n      const rightAnkle = results.poseLandmarks[28];\n\n      const angleLeftKnee = calculateAngle(leftHip, leftKnee, leftAnkle);\n      const angleRightKnee = calculateAngle(rightHip, rightKnee, rightAnkle);\n\n      if (angleLeftKnee < 90 && angleRightKnee < 90) {\n        isSquatting.current = true;\n      }\n      if (angleLeftKnee > 160 && angleRightKnee > 160 && isSquatting.current) {\n        setSquatCount((count) => count + 1);\n        setCurrentPhase('squat'); \n        isSquatting.current = false;\n      }\n    }\n    \n    canvasCtx.restore();\n  }\n\n  function calculateAngle(a, b, c) {\n    const aToB = Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n    const bToC = Math.sqrt(Math.pow(b.x - c.x, 2) + Math.pow(b.y - c.y, 2));\n    const aToC = Math.sqrt(Math.pow(c.x - a.x, 2) + Math.pow(c.y - a.y, 2));\n    return Math.acos((aToB * aToB + bToC * bToC - aToC * aToC) / (2 * aToB * bToC)) * (180 / Math.PI);\n  }\n\n  return (\n    <div style={styles.app}>\n      <header style={styles.header}>\n        <video ref={videoElement} style={styles.video} />\n        <canvas ref={canvasElement} style={styles.canvas} />\n        <canvas\n            ref={canvasElement}\n            style={{\n              // position: \"relative\",\n              // marginLeft: \"auto\",\n              // marginRight: \"auto\",\n              // left: 0,\n              // right: 0,\n              top: \"80%\",\n              // transform: \"translateY(-50%)\",\n              // textAlign: \"center\",\n              // zIndex: 9,\n              width: videoConstraints.width,\n              height: videoConstraints.height,\n            }}\n          />\n        <h1 style={styles.count}>アームカールの回数： {curlCount}</h1>\n        <h1 style={styles.count}>スクワットの回数： {squatCount}</h1>\n      </header>\n    </div>\n  );\n}\n\n// const styles = {\n//   app: {\n//   alignItems: 'center',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   height: '100vh',\n//   justifyContent: 'center',\n//   width: '100vw',\n//   },\n//   header: {\n//   alignItems: 'center',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   justifyContent: 'center',\n//   },\n//   video: {\n//   height: '100%',\n//   position: 'absolute',\n//   top: 0,\n//   width: '100%',\n//   zIndex: -1,\n//   },\n//   canvas: {\n//   height: '100%',\n//   position: 'absolute',\n//   top: 0,\n//   width: '100%',\n//   zIndex: -1,\n//   },\n//   count: {\n//   fontSize: '2em',\n//   marginTop: '2em',\n//   },\n// };\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}